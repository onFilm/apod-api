plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.apod'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    checkstyle 'com.puppycrawl.tools:checkstyle:10.0'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test // Ensure tests are run before generating the report

    reports {
        xml.required = true   // Generate XML report
        html.required = true  // Generate HTML report
        csv.required = false  // Disable CSV report (optional)
        html.outputLocation = file("${buildDir}/jacocoHtml") // Output HTML report to a directory
        xml.outputLocation = file("${buildDir}/jacocoTestReport.xml") // XML report location
    }
}

jacoco {
    toolVersion = "0.8.8"
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1
            }
        }
    }
}

checkstyle {
    toolVersion = '10.13.0'
    configFile rootProject.file("config/checkstyle/checkstyle.xml")
    println "Checkstyle config path: ${file('config/checkstyle/checkstyle.xml').absolutePath}"
    configProperties.checkstyleSuppressionsPath = rootProject.file('config/checkstyle/suppressions.xml').absolutePath
}

checkstyleMain {
    source 'src/main/java'
}

checkstyleTest {
    source 'src/test/java'
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}